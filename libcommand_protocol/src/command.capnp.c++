// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: command.capnp

#include "command.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<52> b_c7d54a0a5b4f9a04 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      4, 154,  79,  91,  10,  74, 213, 199,
     14,   0,   0,   0,   1,   0,   1,   0,
     40, 213, 158,  19,  70,  26, 236, 181,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 109,  97, 110, 100,  46,
     99,  97, 112, 110, 112,  58,  67, 111,
    109, 109,  97, 110, 100,   0,   0,   0,
     12,   0,   0,   0,   1,   0,   1,   0,
     54, 102, 139, 231, 140,  99, 102, 223,
     17,   0,   0,   0,  74,   0,   0,   0,
    191,  12,   6, 228, 238, 107,  34, 148,
     17,   0,   0,   0, 122,   0,   0,   0,
    211,  82,   5, 157,  96, 212, 108, 231,
     17,   0,   0,   0,  42,   0,   0,   0,
     67, 111, 109, 109,  97, 110, 100, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     70, 111,  99, 117, 115,  68, 105, 114,
    101,  99, 116, 105, 111, 110,   0,   0,
     66, 105, 110, 100,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    168,   9, 120, 180,  63, 224,  35, 197,
     45,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 109,  97, 110, 100,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     54, 102, 139, 231, 140,  99, 102, 223,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 103, 117, 109, 101, 110, 116,
    115,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c7d54a0a5b4f9a04 = b_c7d54a0a5b4f9a04.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c7d54a0a5b4f9a04[] = {
  &s_c523e03fb47809a8,
  &s_df66638ce78b6636,
};
static const uint16_t m_c7d54a0a5b4f9a04[] = {1, 0};
static const uint16_t i_c7d54a0a5b4f9a04[] = {0, 1};
const ::capnp::_::RawSchema s_c7d54a0a5b4f9a04 = {
  0xc7d54a0a5b4f9a04, b_c7d54a0a5b4f9a04.words, 52, d_c7d54a0a5b4f9a04, m_c7d54a0a5b4f9a04,
  2, 2, i_c7d54a0a5b4f9a04, nullptr, nullptr, { &s_c7d54a0a5b4f9a04, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_df66638ce78b6636 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     54, 102, 139, 231, 140,  99, 102, 223,
     22,   0,   0,   0,   2,   0,   0,   0,
      4, 154,  79,  91,  10,  74, 213, 199,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 109,  97, 110, 100,  46,
     99,  97, 112, 110, 112,  58,  67, 111,
    109, 109,  97, 110, 100,  46,  67, 111,
    109, 109,  97, 110, 100, 115,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113, 117, 105, 116,   0,   0,   0,   0,
    102, 111,  99, 117, 115,   0,   0,   0,
     98, 105, 110, 100,   0,   0,   0,   0,
    101, 120, 101,  99,   0,   0,   0,   0, }
};
::capnp::word const* const bp_df66638ce78b6636 = b_df66638ce78b6636.words;
#if !CAPNP_LITE
static const uint16_t m_df66638ce78b6636[] = {2, 3, 1, 0};
const ::capnp::_::RawSchema s_df66638ce78b6636 = {
  0xdf66638ce78b6636, b_df66638ce78b6636.words, 34, nullptr, m_df66638ce78b6636,
  0, 4, nullptr, nullptr, nullptr, { &s_df66638ce78b6636, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Commands_df66638ce78b6636, df66638ce78b6636);
static const ::capnp::_::AlignedData<27> b_94226beee4060cbf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    191,  12,   6, 228, 238, 107,  34, 148,
     22,   0,   0,   0,   2,   0,   0,   0,
      4, 154,  79,  91,  10,  74, 213, 199,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 109,  97, 110, 100,  46,
     99,  97, 112, 110, 112,  58,  67, 111,
    109, 109,  97, 110, 100,  46,  70, 111,
     99, 117, 115,  68, 105, 114, 101,  99,
    116, 105, 111, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101, 102, 116,   0,   0,   0,   0,
    114, 105, 103, 104, 116,   0,   0,   0, }
};
::capnp::word const* const bp_94226beee4060cbf = b_94226beee4060cbf.words;
#if !CAPNP_LITE
static const uint16_t m_94226beee4060cbf[] = {0, 1};
const ::capnp::_::RawSchema s_94226beee4060cbf = {
  0x94226beee4060cbf, b_94226beee4060cbf.words, 27, nullptr, m_94226beee4060cbf,
  0, 2, nullptr, nullptr, nullptr, { &s_94226beee4060cbf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(FocusDirection_94226beee4060cbf, 94226beee4060cbf);
static const ::capnp::_::AlignedData<49> b_e76cd4609d0552d3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    211,  82,   5, 157,  96, 212, 108, 231,
     22,   0,   0,   0,   1,   0,   0,   0,
      4, 154,  79,  91,  10,  74, 213, 199,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 109,  97, 110, 100,  46,
     99,  97, 112, 110, 112,  58,  67, 111,
    109, 109,  97, 110, 100,  46,  66, 105,
    110, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,  66, 105, 110, 100, 105,
    110, 103,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 109,  97, 110, 100,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      4, 154,  79,  91,  10,  74, 213, 199,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e76cd4609d0552d3 = b_e76cd4609d0552d3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e76cd4609d0552d3[] = {
  &s_c7d54a0a5b4f9a04,
};
static const uint16_t m_e76cd4609d0552d3[] = {1, 0};
static const uint16_t i_e76cd4609d0552d3[] = {0, 1};
const ::capnp::_::RawSchema s_e76cd4609d0552d3 = {
  0xe76cd4609d0552d3, b_e76cd4609d0552d3.words, 49, d_e76cd4609d0552d3, m_e76cd4609d0552d3,
  1, 2, i_e76cd4609d0552d3, nullptr, nullptr, { &s_e76cd4609d0552d3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_c523e03fb47809a8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    168,   9, 120, 180,  63, 224,  35, 197,
     22,   0,   0,   0,   1,   0,   1,   0,
      4, 154,  79,  91,  10,  74, 213, 199,
      1,   0,   7,   0,   1,   0,   3,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 109,  97, 110, 100,  46,
     99,  97, 112, 110, 112,  58,  67, 111,
    109, 109,  97, 110, 100,  46,  97, 114,
    103, 117, 109, 101, 110, 116, 115,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
    102, 111,  99, 117, 115,  68, 105, 114,
    101,  99, 116, 105, 111, 110,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    191,  12,   6, 228, 238, 107,  34, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 120, 101,  99,  67, 111, 109, 109,
     97, 110, 100,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 105, 110, 100,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    211,  82,   5, 157,  96, 212, 108, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c523e03fb47809a8 = b_c523e03fb47809a8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c523e03fb47809a8[] = {
  &s_94226beee4060cbf,
  &s_c7d54a0a5b4f9a04,
  &s_e76cd4609d0552d3,
};
static const uint16_t m_c523e03fb47809a8[] = {2, 1, 0};
static const uint16_t i_c523e03fb47809a8[] = {0, 1, 2};
const ::capnp::_::RawSchema s_c523e03fb47809a8 = {
  0xc523e03fb47809a8, b_c523e03fb47809a8.words, 68, d_c523e03fb47809a8, m_c523e03fb47809a8,
  3, 3, i_c523e03fb47809a8, nullptr, nullptr, { &s_c523e03fb47809a8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace generated {

// Command
constexpr uint16_t Command::_capnpPrivate::dataWordSize;
constexpr uint16_t Command::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Command::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Command::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Command::Bind
constexpr uint16_t Command::Bind::_capnpPrivate::dataWordSize;
constexpr uint16_t Command::Bind::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Command::Bind::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Command::Bind::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Command::Arguments
constexpr uint16_t Command::Arguments::_capnpPrivate::dataWordSize;
constexpr uint16_t Command::Arguments::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Command::Arguments::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Command::Arguments::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

